{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thomas Mai\\\\git\\\\dig4639-s24-react-xaigaka\\\\labs\\\\unit2\\\\lab10\\\\src\\\\node_modules\\\\react-native-elements\\\\node_modules\\\\react-native-ratings\\\\dist\\\\SwipeRating.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar STAR_IMAGE = require(\"./images/star.png\");\nvar HEART_IMAGE = require(\"./images/heart.png\");\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\nvar BELL_IMAGE = require(\"./images/bell.png\");\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: \"#f1c40f\",\n    backgroundColor: \"white\"\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: \"#e74c3c\",\n    backgroundColor: \"white\"\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: \"#2ecc71\",\n    backgroundColor: \"white\"\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: \"#f39c12\",\n    backgroundColor: \"white\"\n  },\n  custom: {}\n};\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n    if (typeof value === \"number\") {\n      return value >= 0 && value <= 20 ? null : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n  function SwipeRating(props) {\n    var _this;\n    _classCallCheck(this, SwipeRating);\n    _this = _callSuper(this, SwipeRating, [props]);\n    var _this$props = _this.props,\n      onStartRating = _this$props.onStartRating,\n      onSwipeRating = _this$props.onSwipeRating,\n      onFinishRating = _this$props.onFinishRating,\n      fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onStartRating === \"function\") {\n            onStartRating(rating);\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onSwipeRating === \"function\") {\n            onSwipeRating(rating);\n          }\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating(_this.state.value);\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === \"function\") {\n            onFinishRating(rating);\n          }\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      try {\n        this.setState({\n          display: true,\n          isComponentMounted: true\n        }, function () {\n          return _this2.setCurrentRating(_this2.props.startingValue);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"handleLayoutChange\",\n    value: function handleLayoutChange() {\n      var _this3 = this;\n      this.ratingRef.measure(function (fx, fy, width, height, px) {\n        var halfWidth = width / 2;\n        var pageXWithinWindow = px % Dimensions.get(\"window\").width;\n        _this3.setState({\n          centerX: pageXWithinWindow + halfWidth\n        });\n      });\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n        imageSize = _this$props2.imageSize,\n        ratingCount = _this$props2.ratingCount,\n        type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: \"clamp\"\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n        imageSize = _this$props3.imageSize,\n        ratingCount = _this$props3.ratingCount,\n        type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: \"clamp\"\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this4 = this;\n      var _this$props4 = this.props,\n        imageSize = _this$props4.imageSize,\n        ratingCount = _this$props4.ratingCount,\n        type = _this$props4.type,\n        tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return _jsxDEV(View, {\n          style: styles.starContainer,\n          children: _jsxDEV(Image, {\n            source: source,\n            style: {\n              width: imageSize,\n              height: imageSize,\n              tintColor: tintColor\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }, _this4)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 44\n        }, _this4);\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n        fractions = _this$props5.fractions,\n        imageSize = _this$props5.imageSize,\n        ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        var diff = value / imageSize;\n        currentRating = startingValue + diff;\n        currentRating = fractions ? Number(currentRating.toFixed(fractions)) : Math.ceil(currentRating);\n      } else {\n        currentRating = fractions ? Number(startingValue.toFixed(fractions)) : Math.ceil(startingValue);\n      }\n      if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n        return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n      } else {\n        return currentRating;\n      }\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n        imageSize = _this$props6.imageSize,\n        ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n        ratingCount = _this$props7.ratingCount,\n        type = _this$props7.type,\n        readonly = _this$props7.readonly,\n        showReadOnlyText = _this$props7.showReadOnlyText,\n        ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return _jsxDEV(View, {\n        style: styles.showRatingView,\n        children: [_jsxDEV(View, {\n          style: styles.ratingView,\n          children: [_jsxDEV(Text, {\n            style: [styles.ratingText, {\n              color: color\n            }],\n            children: \"Rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), _jsxDEV(Text, {\n            style: [styles.currentRatingText, {\n              color: color\n            }],\n            children: this.getCurrentRating(this.state.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this), _jsxDEV(Text, {\n            style: [styles.maxRatingText, {\n              color: color\n            }],\n            children: [\"/\", ratingCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          children: readonly && showReadOnlyText && _jsxDEV(Text, {\n            style: [styles.readonlyLabel, {\n              color: color\n            }],\n            children: \"(readonly)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      var _this$props8 = this.props,\n        readonly = _this$props8.readonly,\n        type = _this$props8.type,\n        ratingImage = _this$props8.ratingImage,\n        ratingColor = _this$props8.ratingColor,\n        ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n        style = _this$props8.style,\n        showRating = _this$props8.showRating;\n      if (type === \"custom\") {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n      return this.state.display ? _jsxDEV(View, {\n        pointerEvents: readonly ? \"none\" : \"auto\",\n        style: style,\n        children: [showRating && this.displayCurrentRating(), _jsxDEV(View, _objectSpread(_objectSpread({\n          style: styles.starsWrapper\n        }, this.state.panResponder.panHandlers), {}, {\n          children: [_jsxDEV(View, {\n            style: styles.starsInsideWrapper,\n            onLayout: function onLayout() {\n              _this5.handleLayoutChange();\n            },\n            ref: function ref(view) {\n              _this5.ratingRef = view;\n            },\n            children: [_jsxDEV(Animated.View, {\n              style: this.getPrimaryViewStyle()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 13\n            }, this), _jsxDEV(Animated.View, {\n              style: this.getSecondaryViewStyle()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }, this), this.renderRatings()]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n  return SwipeRating;\n}(Component);\nexport { SwipeRating as default };\nSwipeRating.defaultProps = {\n  type: \"star\",\n  ratingImage: STAR_IMAGE,\n  ratingColor: \"#f1c40f\",\n  ratingBackgroundColor: \"white\",\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  starsInsideWrapper: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  showRatingView: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  },\n  readonlyLabel: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495a\"\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  }\n});","map":{"version":3,"names":["React","Component","times","View","Text","Animated","PanResponder","Image","StyleSheet","Platform","Dimensions","jsxDEV","_jsxDEV","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","custom","fractionsType","props","propName","componentName","value","Error","SwipeRating","_Component","_inherits","_this","_classCallCheck","_callSuper","_this$props","onStartRating","onSwipeRating","onFinishRating","fractions","position","ValueXY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","_createClass","key","componentDidMount","_this2","startingValue","err","console","log","componentDidUpdate","prevProps","handleLayoutChange","_this3","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","get","getPrimaryViewStyle","_this$props2","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","getSecondaryViewStyle","_this$props3","renderRatings","_this4","_this$props4","tintColor","index","style","styles","starContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","_this$props5","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","_this$props6","initialRating","displayCurrentRating","_this$props7","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","_this5","_this$props8","ratingImage","ratingColor","ratingBackgroundColor","showRating","pointerEvents","_objectSpread","starsWrapper","panHandlers","starsInsideWrapper","onLayout","ref","view","componentWillUnmount","default","defaultProps","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","OS"],"sources":["C:/Users/Thomas Mai/git/dig4639-s24-react-xaigaka/labs/unit2/lab10/src/node_modules/react-native-elements/node_modules/react-native-ratings/dist/SwipeRating.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport { View, Text, Animated, PanResponder, Image, StyleSheet, Platform, Dimensions } from \"react-native\";\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n    star: {\n        source: STAR_IMAGE,\n        color: \"#f1c40f\",\n        backgroundColor: \"white\"\n    },\n    heart: {\n        source: HEART_IMAGE,\n        color: \"#e74c3c\",\n        backgroundColor: \"white\"\n    },\n    rocket: {\n        source: ROCKET_IMAGE,\n        color: \"#2ecc71\",\n        backgroundColor: \"white\"\n    },\n    bell: {\n        source: BELL_IMAGE,\n        color: \"#f39c12\",\n        backgroundColor: \"white\"\n    },\n    custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === \"number\") {\n            return value >= 0 && value <= 20 ?\n                null :\n                new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n        }\n        return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n    }\n};\nexport default class SwipeRating extends Component {\n    constructor(props) {\n        super(props);\n        const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n        const position = new Animated.ValueXY();\n        const panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderGrant: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onStartRating === \"function\") {\n                        onStartRating(rating);\n                    }\n                }\n            },\n            onPanResponderMove: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onSwipeRating === \"function\") {\n                        onSwipeRating(rating);\n                    }\n                }\n            },\n            onPanResponderRelease: () => {\n                const rating = this.getCurrentRating(this.state.value);\n                if (rating >= this.props.minValue) {\n                    if (!fractions) {\n                        // 'round up' to the nearest rating image\n                        this.setCurrentRating(rating);\n                    }\n                    if (typeof onFinishRating === \"function\") {\n                        onFinishRating(rating);\n                    }\n                }\n            }\n        });\n        this.state = {\n            panResponder,\n            position,\n            display: false,\n            isComponentMounted: false\n        };\n    }\n    componentDidMount() {\n        try {\n            this.setState({ display: true, isComponentMounted: true }, () => this.setCurrentRating(this.props.startingValue));\n        }\n        catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.startingValue !== prevProps.startingValue) {\n            this.setCurrentRating(this.props.startingValue);\n        }\n    }\n    handleLayoutChange() {\n        // eslint-disable-next-line max-params\n        this.ratingRef.measure((fx, fy, width, height, px) => {\n            const halfWidth = width / 2;\n            const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n            this.setState({\n                centerX: pageXWithinWindow + halfWidth\n            });\n        });\n    }\n    getPrimaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { color } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                0,\n                ratingCount * imageSize / 2,\n                ratingCount * imageSize\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor: color,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    getSecondaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { backgroundColor } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                ratingCount * imageSize,\n                ratingCount * imageSize / 2,\n                0\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    renderRatings() {\n        const { imageSize, ratingCount, type, tintColor } = this.props;\n        const { source } = TYPES[type];\n        return times(ratingCount, index => <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }}/>\n      </View>);\n    }\n    // eslint-disable-next-line max-statements\n    getCurrentRating(value) {\n        const { fractions, imageSize, ratingCount } = this.props;\n        const startingValue = ratingCount / 2;\n        let currentRating = this.props.minValue ? this.props.minValue : 0;\n        if (value > ratingCount * imageSize / 2) {\n            currentRating = ratingCount;\n        }\n        else if (value < -ratingCount * imageSize / 2) {\n            currentRating = this.props.minValue ? this.props.minValue : 0;\n        }\n        else if (value <= imageSize || value > imageSize) {\n            const diff = value / imageSize;\n            currentRating = startingValue + diff;\n            currentRating = fractions ?\n                Number(currentRating.toFixed(fractions)) :\n                Math.ceil(currentRating);\n        }\n        else {\n            currentRating = fractions ?\n                Number(startingValue.toFixed(fractions)) :\n                Math.ceil(startingValue);\n        }\n        if (this.props.jumpValue > 0 &&\n            this.props.jumpValue < this.props.ratingCount) {\n            return (Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n                (1 / this.props.jumpValue));\n        }\n        else {\n            return currentRating;\n        }\n    }\n    // eslint-disable-next-line max-statements\n    setCurrentRating(rating) {\n        const { imageSize, ratingCount } = this.props;\n        // `initialRating` corresponds to `startingValue` in the getter. Naming it\n        // Differently here avoids confusion with `value` below.\n        const initialRating = ratingCount / 2;\n        let value = null;\n        if (rating > ratingCount) {\n            value = ratingCount * imageSize / 2;\n        }\n        else if (rating < 0) {\n            value = -ratingCount * imageSize / 2;\n        }\n        else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n            value = (rating - initialRating) * imageSize;\n        }\n        else {\n            value = 0;\n        }\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: value, y: 0 });\n        if (this.state.isComponentMounted) {\n            this.setState({ position: newPosition, value });\n        }\n    }\n    displayCurrentRating() {\n        const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n        const color = ratingTextColor || TYPES[type].color;\n        return (<View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating(this.state.value)}\n          </Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>\n          {readonly && showReadOnlyText &&\n                <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}\n        </View>\n      </View>);\n    }\n    render() {\n        const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n        if (type === \"custom\") {\n            const custom = {\n                source: ratingImage,\n                color: ratingColor,\n                backgroundColor: ratingBackgroundColor\n            };\n            TYPES.custom = custom;\n        }\n        return this.state.display ?\n            <View pointerEvents={readonly ? \"none\" : \"auto\"} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={() => {\n                    this.handleLayoutChange();\n                }} ref={view => {\n                    this.ratingRef = view;\n                }}>\n            <Animated.View style={this.getPrimaryViewStyle()}/>\n            <Animated.View style={this.getSecondaryViewStyle()}/>\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n            null;\n    }\n    componentWillUnmount() {\n        this.setState({ isComponentMounted: false });\n    }\n}\nSwipeRating.defaultProps = {\n    type: \"star\",\n    ratingImage: STAR_IMAGE,\n    ratingColor: \"#f1c40f\",\n    ratingBackgroundColor: \"white\",\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n};\nconst styles = StyleSheet.create({\n    starsWrapper: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    starsInsideWrapper: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    showRatingView: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingView: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingText: {\n        fontSize: 15,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    },\n    readonlyLabel: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495a\"\n    },\n    currentRatingText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n    },\n    maxRatingText: {\n        fontSize: 18,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}