{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas Mai\\\\git\\\\dig4639-s24-react-xaigaka\\\\labs\\\\unit2\\\\lab10\\\\src\\\\components\\\\Summary\\\\index.js\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Summary = function Summary(_ref) {\n  var route = _ref.route;\n  var data = route.params.data;\n  var totalScore = 0;\n  var calculateScore = function calculateScore(userAnswers) {\n    var score = 0;\n    data.forEach(function (question, index) {\n      console.log('Question type:', question.type);\n      console.log('Correct answer:', question.correct);\n      console.log('User answer:', userAnswers[index]);\n      if (question.type === 'true-false' || question.type === 'multiple-choice') {\n        if (question.correct === userAnswers[index]) {\n          score++;\n        }\n      } else if (question.type === 'multiple-answer') {\n        var selectedAnswers = userAnswers[index];\n        var correctAnswers = question.correct;\n        if (selectedAnswers.length === correctAnswers.length && selectedAnswers.every(function (answer) {\n          return correctAnswers.includes(answer);\n        })) {\n          score++;\n        }\n      }\n    });\n    return score;\n  };\n  totalScore = calculateScore();\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      testID: \"total\",\n      children: [\"Total Score: \", totalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), data.map(function (question, index) {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          children: question.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), question.type === 'true-false' || question.type === 'multiple-choice' ? _jsxDEV(Text, {\n          children: [\"Correct Answer: \", question.choices[question.correct]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, _this) : _jsxDEV(Text, {\n          children: [\"Correct Answers: \", question.correct.map(function (index) {\n            return question.choices[index];\n          }).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Summary;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsxDEV","_jsxDEV","Summary","_ref","route","data","params","totalScore","calculateScore","userAnswers","score","forEach","question","index","console","log","type","correct","selectedAnswers","correctAnswers","length","every","answer","includes","style","styles","container","children","testID","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","prompt","choices","join","create","flex","justifyContent","alignItems"],"sources":["C:/Users/Thomas Mai/git/dig4639-s24-react-xaigaka/labs/unit2/lab10/src/components/Summary/index.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nconst Summary = ({ route }) => {\r\n  const { data } = route.params;\r\n  let totalScore = 0;\r\n\r\n  const calculateScore = (userAnswers) => {\r\n    let score = 0;\r\n    data.forEach((question, index) => {\r\n      console.log('Question type:', question.type);\r\n      console.log('Correct answer:', question.correct);\r\n      console.log('User answer:', userAnswers[index]);\r\n      if (question.type === 'true-false' || question.type === 'multiple-choice') {\r\n        if (question.correct === userAnswers[index]) {\r\n          score++;\r\n        }\r\n      } else if (question.type === 'multiple-answer') {\r\n        const selectedAnswers = userAnswers[index];\r\n        const correctAnswers = question.correct;\r\n        if (\r\n          selectedAnswers.length === correctAnswers.length &&\r\n          selectedAnswers.every((answer) => correctAnswers.includes(answer))\r\n        ) {\r\n          score++;\r\n        }\r\n      }\r\n    });\r\n    return score;\r\n  };\r\n\r\n  totalScore = calculateScore();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text testID=\"total\">Total Score: {totalScore}</Text>\r\n      {data.map((question, index) => (\r\n        <View key={index}>\r\n          <Text>{question.prompt}</Text>\r\n          {question.type === 'true-false' || question.type === 'multiple-choice'\r\n            ? (\r\n              <Text>\r\n                Correct Answer: {question.choices[question.correct]}\r\n              </Text>\r\n            )\r\n            : (\r\n              <Text>\r\n                Correct Answers: {question.correct.map((index) => question.choices[index]).join(', ')}\r\n              </Text>\r\n            )\r\n          }\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default Summary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}