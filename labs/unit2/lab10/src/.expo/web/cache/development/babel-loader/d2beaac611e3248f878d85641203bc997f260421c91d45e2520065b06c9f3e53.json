{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thomas Mai\\\\git\\\\dig4639-s24-react-xaigaka\\\\labs\\\\unit2\\\\lab10\\\\src\\\\components\\\\Question\\\\index.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ButtonGroup } from 'react-native-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Question = function Question(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var data = route.params.data;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentIndex = _useState2[0],\n    setCurrentIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedAnswer = _useState4[0],\n    setSelectedAnswer = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userAnswers = _useState6[0],\n    setUserAnswers = _useState6[1];\n  var handleNextQuestion = function handleNextQuestion() {\n    console.log(\"here\");\n    if (currentIndex < data.length - 1) {\n      setUserAnswers([].concat(_toConsumableArray(userAnswers), [selectedAnswer]));\n      setCurrentIndex(currentIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      setUserAnswers([].concat(_toConsumableArray(userAnswers), [selectedAnswer]));\n      console.log(\"Navigating to Summary screen...\");\n      console.log(\"data:\", data);\n      console.log(\"userAnswers:\", userAnswers);\n      if (data && userAnswers) {\n        navigation.navigate('Summary', {\n          data: data,\n          userAnswers: userAnswers\n        });\n      } else {\n        console.error(\"Error: 'data' or 'userAnswers' is null.\");\n      }\n    }\n  };\n  var handleAnswerSelection = function handleAnswerSelection(index) {\n    if (currentIndex === data.length - 1) {\n      setUserAnswers([].concat(_toConsumableArray(userAnswers), [index]));\n    } else {\n      if (data[currentIndex].type === \"true-false\") {\n        setSelectedAnswer(index);\n      } else if (data[currentIndex].type === \"multiple-answer\") {\n        var newSelectedAnswers = _toConsumableArray(selectedAnswer || []);\n        var selectedIndex = newSelectedAnswers.indexOf(index);\n        if (selectedIndex === -1) {\n          newSelectedAnswers.push(index);\n        } else {\n          newSelectedAnswers.splice(selectedIndex, 1);\n        }\n        setSelectedAnswer(newSelectedAnswers.length > 0 ? newSelectedAnswers : null);\n      } else {\n        setSelectedAnswer(selectedAnswer === index ? null : index);\n      }\n      setSelectedIndex(index);\n    }\n  };\n  var _data$currentIndex = data[currentIndex],\n    prompt = _data$currentIndex.prompt,\n    type = _data$currentIndex.type,\n    choices = _data$currentIndex.choices;\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      children: prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), _jsxDEV(ButtonGroup, {\n      onPress: handleAnswerSelection,\n      selectedIndex: selectedAnswer,\n      buttons: choices,\n      containerStyle: {\n        height: 100\n      },\n      testID: \"choices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Next Question\",\n      onPress: handleNextQuestion,\n      testID: \"next-question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\nexport default Question;","map":{"version":3,"names":["React","useState","View","Text","Button","ButtonGroup","jsxDEV","_jsxDEV","Question","_ref","route","navigation","data","params","_useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","_useState3","_useState4","selectedAnswer","setSelectedAnswer","_useState5","_useState6","userAnswers","setUserAnswers","handleNextQuestion","console","log","length","concat","_toConsumableArray","navigate","error","handleAnswerSelection","index","type","newSelectedAnswers","selectedIndex","indexOf","push","splice","setSelectedIndex","_data$currentIndex","prompt","choices","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onPress","buttons","containerStyle","height","testID","title"],"sources":["C:/Users/Thomas Mai/git/dig4639-s24-react-xaigaka/labs/unit2/lab10/src/components/Question/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { ButtonGroup } from 'react-native-elements';\r\n\r\nconst Question = ({ route, navigation }) => {\r\n  const { data } = route.params;\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  const handleNextQuestion = () => {\r\n    console.log(\"here\")\r\n    if (currentIndex < data.length - 1) {\r\n      setUserAnswers([...userAnswers, selectedAnswer]);\r\n      setCurrentIndex(currentIndex + 1);\r\n      setSelectedAnswer(null);\r\n    } else {\r\n      setUserAnswers([...userAnswers, selectedAnswer]); // Store the selected answer for the last question\r\n      console.log(\"Navigating to Summary screen...\");\r\n      console.log(\"data:\", data);\r\n      console.log(\"userAnswers:\", userAnswers);\r\n      if (data && userAnswers) {\r\n        navigation.navigate('Summary', { data, userAnswers });\r\n      } else {\r\n        console.error(\"Error: 'data' or 'userAnswers' is null.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnswerSelection = (index) => {\r\n    if (currentIndex === data.length - 1) {\r\n      setUserAnswers([...userAnswers, index]); // Store the selected answer for the last question directly\r\n    } else {\r\n      // For other questions, handle answer selection as before\r\n      if (data[currentIndex].type === \"true-false\") {\r\n        setSelectedAnswer(index);\r\n      } else if (data[currentIndex].type === \"multiple-answer\") {\r\n        const newSelectedAnswers = [...(selectedAnswer || [])];\r\n        const selectedIndex = newSelectedAnswers.indexOf(index);\r\n    \r\n        if (selectedIndex === -1) {\r\n          newSelectedAnswers.push(index);\r\n        } else {\r\n          newSelectedAnswers.splice(selectedIndex, 1);\r\n        }\r\n    \r\n        setSelectedAnswer(newSelectedAnswers.length > 0 ? newSelectedAnswers : null);\r\n      } else {\r\n        // Toggle the selected answer for multiple-choice questions\r\n        setSelectedAnswer(selectedAnswer === index ? null : index);\r\n      }\r\n  \r\n      // Update the selectedIndex state to highlight the selected button\r\n      setSelectedIndex(index);\r\n    }\r\n  };\r\n  \r\n  const { prompt, type, choices } = data[currentIndex];\r\n\r\n  return (\r\n    <View>\r\n      <Text>{prompt}</Text>\r\n      <ButtonGroup\r\n        onPress={handleAnswerSelection}\r\n        selectedIndex={selectedAnswer}\r\n        buttons={choices}\r\n        containerStyle={{ height: 100 }}\r\n        testID=\"choices\"\r\n      />\r\n      <Button title=\"Next Question\" onPress={handleNextQuestion} testID=\"next-question\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Question;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}