{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thomas Mai\\\\git\\\\dig4639-s24-react-xaigaka\\\\labs\\\\unit2\\\\lab9\\\\src\\\\components\\\\StopWatchForLaps\\\\StopWatch.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StopWatch(_ref) {\n  var recordLap = _ref.recordLap;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    running = _useState2[0],\n    setRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (prevTimer) {\n        return prevTimer + 10;\n      });\n    }\n  }, [running]);\n  useEffect(function () {\n    var currentTimer;\n    if (running) {\n      currentTimer = setInterval(updateTimer, 10);\n    }\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var startStop = function startStop() {\n    setRunning(!running);\n  };\n  var reset = function reset() {\n    setTimer(0);\n  };\n  var recordLapHandler = function recordLapHandler() {\n    if (running) {\n      recordLap(timer);\n    }\n  };\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      textAlign: \"center\"\n    },\n    children: [_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"7em\",\n        margin: \"auto\",\n        fontFamily: \"monospace\"\n      },\n      children: [mins, \":\", secs, \".\", mills]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), _jsxDEV(\"button\", {\n      style: {\n        fontSize: \"3em\"\n      },\n      onClick: startStop,\n      children: running ? \"Pause\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), _jsxDEV(\"button\", {\n      style: {\n        fontSize: \"3em\"\n      },\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), _jsxDEV(\"button\", {\n      style: {\n        fontSize: \"3em\"\n      },\n      onClick: recordLapHandler,\n      children: \"Record Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","StopWatch","_ref","recordLap","_useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","timer","setTimer","updateTimer","prevTimer","currentTimer","setInterval","clearInterval","startStop","reset","recordLapHandler","mins","Math","floor","toString","padStart","secs","mills","style","width","textAlign","children","fontSize","margin","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/Thomas Mai/git/dig4639-s24-react-xaigaka/labs/unit2/lab9/src/components/StopWatchForLaps/StopWatch.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function StopWatch({ recordLap }) {\r\n    const [running, setRunning] = useState(false);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    const updateTimer = useCallback(() => {\r\n        if (running) {\r\n            setTimer(prevTimer => prevTimer + 10);\r\n        }\r\n    }, [running]);\r\n\r\n    useEffect(() => {\r\n        let currentTimer;\r\n        if (running) {\r\n            currentTimer = setInterval(updateTimer, 10);\r\n        }\r\n        return () => clearInterval(currentTimer);\r\n    }, [running, updateTimer]);\r\n\r\n    const startStop = () => {\r\n        setRunning(!running);\r\n    };\r\n\r\n    const reset = () => {\r\n        setTimer(0);\r\n    };\r\n\r\n    const recordLapHandler = () => {\r\n        if (running) {\r\n            recordLap(timer);\r\n        }\r\n    };\r\n\r\n    const mins = (Math.floor((timer / (1000 * 60)) % 60)).toString().padStart(2, \"0\");\r\n    const secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\");\r\n    const mills = (timer % 1000).toString().padStart(3, \"0\");\r\n\r\n    return (\r\n        <div style={{ width: \"100vw\", textAlign: \"center\" }}>\r\n            <p style={{ fontSize: \"7em\", margin: \"auto\", fontFamily: \"monospace\" }}>\r\n                {mins}:{secs}.{mills}\r\n            </p>\r\n            <button style={{ fontSize: \"3em\" }} onClick={startStop}>\r\n                {running ? \"Pause\" : \"Start\"}\r\n            </button>\r\n            <button style={{ fontSize: \"3em\" }} onClick={reset}>\r\n                Reset\r\n            </button>\r\n            <button style={{ fontSize: \"3em\"}} onClick={recordLapHandler}>\r\n                Record Time\r\n            </button>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}